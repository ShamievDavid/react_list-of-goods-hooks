{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortFields","goodsFromServer","App","useState","DEFAULT","sortField","setSortField","reversed","setReversed","goods","preparedGoods","sort","good1","good2","ALPHABETICLY","localeCompare","LENGTH","length","reverse","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0DAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,WAAAA,E,wBAAAA,E,iBAAAA,M,KAML,IA6BaE,EAAgB,WAC3B,MAAkCC,mBAASH,EAAWI,SAAtD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCH,oBAAS,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KAEMC,EAjCiB,SACvBA,EACAJ,EACAE,GAEA,IAAMG,EAAa,YAAOD,GAiB1B,OAfIJ,GACFK,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQR,GACN,KAAKL,EAAWc,aACd,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAAWgB,OACd,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKXV,EACKG,EAAcQ,UAGhBR,EAOOS,CAAiBlB,EAAiBI,EAAWE,GAO3D,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEf,IAAcL,EAAWc,aACrB,kBACA,2BAENQ,QAAS,kBAAMhB,EAAaN,EAAWc,eAPzC,iCAYA,wBACEO,KAAK,SACLD,UACEf,IAAcL,EAAWgB,OACrB,oBACA,6BAENM,QAAS,kBAAMhB,EAAaN,EAAWgB,SAPzC,4BAYA,wBACEK,KAAK,SACLD,UACEb,EACI,oBACA,6BAENe,QAAS,kBAAMd,GAAaD,IAP9B,sBAYEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVE,QAhDI,WACZd,GAAY,GACZF,EAAaN,EAAWI,UA2ClB,sBAUJ,6BACGK,EAAMc,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAAoBA,aChH9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c28d4ab2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortFields {\n  DEFAULT = '',\n  ALPHABETICLY = 'alphabet',\n  LENGTH = 'length',\n}\n\nconst getPreparedGoods = (\n  goods: string [],\n  sortField: SortFields,\n  reversed: boolean,\n) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SortFields.ALPHABETICLY:\n          return good1.localeCompare(good2);\n\n        case SortFields.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    return preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState(SortFields.DEFAULT);\n  const [reversed, setReversed] = useState(false);\n\n  const goods = getPreparedGoods(goodsFromServer, sortField, reversed);\n\n  const reset = () => {\n    setReversed(false);\n    setSortField(SortFields.DEFAULT);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            sortField === SortFields.ALPHABETICLY\n              ? 'button is-info '\n              : 'button is-info  is-light'\n          }\n          onClick={() => setSortField(SortFields.ALPHABETICLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            sortField === SortFields.LENGTH\n              ? 'button is-success'\n              : 'button is-success is-light'\n          }\n          onClick={() => setSortField(SortFields.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            reversed\n              ? 'button is-warning'\n              : 'button is-warning is-light'\n          }\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goods.map(good => (\n          <li data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}